<?xml version="1.0" encoding="UTF-8"?>
<rules
    xmlns="http://namespaces.plone.org/diazo"
    xmlns:css="http://namespaces.plone.org/diazo/css"
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform">

    <!-- Add alternativ theme templates -->
    <!-- ifd to add minimal theme template for the
         tiles editiong overlays -->
    <theme href="minimal.html" if-path="@@edit-tile" />
    <!-- Setup custom login form -->
    <theme href="signin.html" css:if-content="body.template-login_form" />
    <theme href="signin.html" css:if-content="body.template-logged_out" />
    <theme href="signin.html" css:if-content="body.template-login_failed" />
    <theme href="signin.html" css:if-content="body.template-mail_password_form" />
    
    <!-- Rules applying to a standard Plone web page -->
    <rules css:if-content="#visual-portal-wrapper">

        <notheme if="$ajax_load" />          
        <theme href="theme.html" />
        
        <replace theme="/html/head/title" content="/html/head/title" />
        <replace theme="/html/head/base" content="/html/head/base" />

        <!-- Add meta tags -->
        <drop theme="/html/head/meta" />
        
        <after content="/html/head/meta" theme-children="/html/head" />
        <!-- Copy style, script and link tags in the order they appear in the content -->
        <after
            content="/html/head/style | /html/head/script | /html/head/link"
            theme-children="/html/head"
            />
        <!-- Move javascripts to the footer. this might cause problems
             with Plone Addons that asume the js already loaded -->
        <!--<after content="/html/head/script" 
            theme="/html/body/footer" />-->

        <drop theme="/html/head/style" />
        <drop theme="/html/head/script" />
        <drop theme="/html/head/link" />

        <!-- Custom favicon implementation -->
        <drop content="link[@type='image/x-icon']" />
        <after theme="/html/head">
            <link rel="shortcut icon" href="/++theme++ifd.sitetheme/img/favicon.ico" type="images/x-icon" />
        </after>

        <!-- Copy over the id/class attributes on the body tag.
             This is important for per-section styling -->
        <merge attributes="class" css:content="body" css:theme="body" />
        <copy attributes="id dir" css:content="body" css:theme="body" />

        <!-- CMSUI Editbar replacements -->
        <drop css:theme="#app-toolbar"
            css:if-content="#anon-personalbar" />
        <replace css:theme="#app-toolbar"
            css:content="#toolbar" />

        <!-- Logo (link target) -->
        <copy attributes="href" css:content="#portal-logo" css:theme="a.navbar-brand" />

        <!-- Global navigation -->
        <replace css:content="#portal-globalnav li"
            css:theme-children="#app-navbar" />

        <!-- Login form rules -->
        <replace css:content-children="#content-core" 
                css:theme-children="#page-content"
                css:if-content="body.template-login_form" />
        <replace css:content-children="#content-core" 
                css:theme-children="#page-content"
                css:if-content="body.template-logged_out" />
        <replace css:content-children="#content" 
                css:theme-children="#page-content"
                css:if-content="body.template-mail_password_form" />


        <!-- Document Content -->
        <replace css:content-children="#content" 
            css:theme-children="#content" />
        
        <before css:content=".portalMessage" css:theme="#content" />
        <replace css:content-children="#viewlet-below-content"
            css:theme-children="#below-main-content" />
        
        <replace css:content-children="#infobar"
            css:theme-children="#app-sidebar-info" />
        <!-- Columns -->
        <replace css:content-children="#portal-column-two > *"
            css:theme-children="#app-sidebar" />

        <replace css:content-children="#footer-infobar"
            css:theme-children="#footer-content" />

        <replace css:content=".field">
          <xsl:choose>
              <xsl:when test="./input[@type='checkbox']|./input[@type='radio']">
                  <div class="field form-group">
                      <xsl:apply-templates select="./*[not(@type='radio' or @type='checkbox' or (local-name() = 'label' and preceding-sibling::input[@type='radio' or @type='checkbox']))]"/>
                      <xsl:for-each select="./input[@type='checkbox']">
                          <xsl:variable name="label" select="./following-sibling::label"/>
                          <label for="option-one" class="app-checkbox">
                              <xsl:copy-of select="$label/@for"/>
                              <input>
                                  <xsl:apply-templates select="./@*"/>
                              </input>
                              <xsl:value-of select="$label/text()"/>
                          </label>
                      </xsl:for-each>
                      <xsl:for-each select="./input[@type='radio']">
                          <xsl:variable name="label" select="./following-sibling::label"/>
                          <label for="option-one" class="pure-radio">
                              <xsl:copy-of select="$label/@for"/>
                              <input>
                                  <xsl:apply-templates select="./@*"/>
                              </input>
                              <xsl:value-of select="$label/text()"/>
                          </label>
                      </xsl:for-each>
                  </div>            
              </xsl:when>
              <xsl:otherwise>
                  <div class="field pure-control-group">
                    <xsl:apply-templates select="./*"/>
                  </div>
              </xsl:otherwise>
          </xsl:choose>
        </replace>

    </rules>

</rules>
